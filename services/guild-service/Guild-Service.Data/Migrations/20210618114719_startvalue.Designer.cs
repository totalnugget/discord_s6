// <auto-generated />
using System;
using GuildService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GuildService.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210618114719_startvalue")]
    partial class startvalue
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GuildService.Domain.Entities.ChannelPos", b =>
                {
                    b.Property<int>("ChannelId")
                        .HasColumnType("integer");

                    b.Property<int?>("GuildId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.HasKey("ChannelId");

                    b.HasIndex("GuildId");

                    b.ToTable("ChannelPos");

                    b.HasData(
                        new
                        {
                            ChannelId = 1,
                            GuildId = 1,
                            Name = "general",
                            Position = 1
                        });
                });

            modelBuilder.Entity("GuildService.Domain.Entities.Guild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'100', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Guild");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 6, 18, 11, 47, 19, 434, DateTimeKind.Utc).AddTicks(9614),
                            Description = "talk en play zone for friends",
                            LastUpdatedAt = new DateTime(2021, 6, 18, 11, 47, 19, 434, DateTimeKind.Utc).AddTicks(9614),
                            Name = "club house",
                            Region = "eu"
                        });
                });

            modelBuilder.Entity("GuildService.Domain.Entities.GuildUser", b =>
                {
                    b.Property<int>("GuildId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("boolean");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Permissions")
                        .HasColumnType("integer");

                    b.HasKey("GuildId", "UserId");

                    b.ToTable("GuildUsers");

                    b.HasData(
                        new
                        {
                            GuildId = 1,
                            UserId = 1,
                            IsOwner = true,
                            Nickname = "harry lotions :)",
                            Permissions = 0
                        });
                });

            modelBuilder.Entity("GuildService.Domain.Entities.ChannelPos", b =>
                {
                    b.HasOne("GuildService.Domain.Entities.Guild", null)
                        .WithMany("Channels")
                        .HasForeignKey("GuildId");
                });

            modelBuilder.Entity("GuildService.Domain.Entities.GuildUser", b =>
                {
                    b.HasOne("GuildService.Domain.Entities.Guild", null)
                        .WithMany("Users")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
